importar { chromium } desde 'playwright'
importar { monedas } desde '@/ve/constantes.ve.esjs'

exportar porDefecto asincrono funcion () {
  const respuesta = esperar obtenerRespuesta()

  retornar extraerCotizaciones(respuesta)
}

asincrono funcion obtenerRespuesta() {
  const browser = esperar chromium.launch()
  const context = esperar browser.newContext({
    userAgent:
      'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3',
  })
  const page = esperar context.newPage()

  intentar {
    esperar page.goto('https://laslucas.com/', {
      waitUntil: 'domcontentloaded',
    })

    esperar page.waitForTimeout(3000)

    const valorDolar = esperar page.$eval('.price__value', (el) =>
      el.textContent.recortarEspacios().reemplazar(/\s+/g, ''),
    )

    si (!valorDolar) {
      lanzar crear Error('No se encontró la cotización del dólar')
    }

    const valorNumerico = valorDolar.reemplazar(',', '.')

    retornar {
      laslucas: valorNumerico,
    }
  } finalmente {
    esperar browser.close()
  }
}

funcion extraerCotizaciones(json) {
  const fuentes = [
    {
      slug: 'paralelo',
      nombre: 'Paralelo',
      promedio: interpretarValorMonetario(json.laslucas),
    },
  ]

  const cotizaciones = []

  fuentes.paraCada(({ slug, nombre, promedio }) => {
    cotizaciones.agregar({
      fuente: slug,
      nombre,
      compra: nulo,
      venta: nulo,
      promedio,
      fechaActualizacion: crear Fecha().aCadenaISO(),
    })
  })

  retornar cotizaciones
}

funcion interpretarValorMonetario(valor) {
  retornar Numero.interpretarDecimal(valor);
}

funcion interpretarFecha(fecha) {
  intentar {
    retornar crear Fecha(fecha).aCadenaISO();
  } capturar (error) {
    retornar fecha
  }
}
